name: Webapp CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  FALCON_CLIENT_ID: "${{ secrets.FALCON_CLIENT_ID }}"
  FALCON_CLIENT_SECRET: "${{ secrets.FALCON_CLIENT_SECRET }}"
  FALCON_CLOUD_REGION: "${{ secrets.FALCON_CLOUD_REGION }}"
  CONTAINER_REPOSITORY: "${{ secrets.CONTAINER_REPOSITORY }}"

jobs:
  webapp-ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Create Semantic Version
      id: tag
      uses: paulhatch/semantic-version@v4.0.2
      with:
        tag_prefix: "v"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
        bump_each_commit: true

    - name: Setup Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: NPM Clean Install
      run: npm ci

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.4.1

    - name: Build Docker Image
      uses: docker/build-push-action@v4
      with:
        file: ./Dockerfile
        load: true
        cache-from: type=registry,ref=${{ secrets.REGISTRY_HOST }}/public/webapp-cicd-demo:cache
        cache-to: type=inline
        platforms: linux/amd64
        tags: "${{ secrets.REGISTRY_HOST }}/public/webapp-cicd-demo:${{ steps.tag.outputs.version_tag }}"

    - name: Inspect Docker Image
      run: |
        docker image inspect "${{ secrets.REGISTRY_HOST }}/public/webapp-cicd-demo:${{ steps.tag.outputs.version_tag }}"

    - name: CrowdStrike Container Image Scan
      uses: crowdstrike/container-image-scan-action@v0.8
      with:
        crowdstrike_region: "${{ env.FALCON_CLOUD_REGION }}"
        container_repository: "${{ secrets.REGISTRY_HOST }}/public/webapp-cicd-demo"
        container_tag: "${{ steps.tag.outputs.version_tag }}"
      env:
        FALCON_CLIENT_ID: "${{ env.FALCON_CLIENT_ID }}"
        FALCON_CLIENT_SECRET: "${{ env.FALCON_CLIENT_SECRET }}"
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_HOST }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Push Docker Image to the registry
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: "${{ secrets.REGISTRY_HOST }}/public/webapp-cicd-demo:${{ steps.tag.outputs.version_tag }}"
